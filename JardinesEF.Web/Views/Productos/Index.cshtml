@model PagedList.IPagedList<JardinesEF.Web.Models.Producto.ProductoListVm>
@using JardinesEF.Web.Classes
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}
<div>
    <a href="@Url.Action("Create","Productos")" class="btn btn-primary" style="float: right">Nuevo</a>
    <h2>Listado de Productos</h2>
</div>
@if (TempData["operacion"] != null)
{
    var operacion = (Operacion)TempData["operacion"];
    var msg = TempData["Msg"].ToString();
    switch (operacion)
    {
        case Operacion.Agregar:
            <div class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Éxito!</strong> @msg
            </div>

            break;
        case Operacion.Borrar:
            <div class="alert alert-danger alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Éxito!</strong> @msg
            </div>

            break;
        case Operacion.Editar:
            <div class="alert alert-warning alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Éxito!</strong> @msg
            </div>

            break;
    }
}

@using (Html.BeginForm(null, null, FormMethod.Get, new { @class = "form-inline" }))
{
    <p>
        <label>Filtrar por:</label>
        @Html.DropDownList("categoriaSeleccionadaId", (SelectList)ViewBag.Categorias, htmlAttributes: new { @class = "form-control" })
        <input type="submit" class="btn btn-success" value="Filtrar" />

    </p>

}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model=>model.FirstOrDefault().Imagen)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NombreProducto)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Categoria)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PrecioUnitario)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().StockDisponible)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Suspendido)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @if (item.Imagen == null)
                {
                    <img id="imgSalida" src="@Url.Content($"~/Content/Imagenes/Productos/SinImagenDisponible.jpg")" style="height: 50px" class="img-thumbnail">

                }
                else
                {
                    <img id="imgSalida" src="@Url.Content($"~/Content/Imagenes/Productos/{item.Imagen}")" style="height: 50px" class="img-thumbnail">

                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProducto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categoria)
            </td>
            <td style="text-align: right">
                @Html.DisplayFor(modelItem => item.PrecioUnitario)
            </td>
            <td style="text-align: right">
                @Html.DisplayFor(modelItem => item.StockDisponible)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Suspendido)
            </td>
            <td>
                @using (Html.BeginForm("AddToCart", "Carrito"))
                {
                    <div class="btn-group">
                        @Html.ActionLink("Edit", "Edit", "Productos", new {id = item.ProductoId}, new {@class = "btn btn-warning"})
                        @Html.ActionLink("Details", "Details", "Productos", new {id = item.ProductoId}, new {@class = "btn btn-info"})
                        @Html.ActionLink("Borrar", "Delete", "Productos", new {id = item.ProductoId}, new {@class = "btn btn-danger"})

                        <div style="float: right">
                            @Html.Hidden("productoId", item.ProductoId)
                            @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                            @if (item.Suspendido || item.StockDisponible == 0)
                            {
                                <input type="submit" class="btn btn-default" value="Agregar" disabled="disabled" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-default" value="Agregar" />
                            }
                        </div>
                    </div>
                }
            </td>
        </tr>
    }

</table>
Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), de: @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
        ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter
}))
